!function(o){var n={};function e(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return o[t].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=o,e.c=n,e.d=function(o,n,t){e.o(o,n)||Object.defineProperty(o,n,{enumerable:!0,get:t})},e.r=function(o){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},e.t=function(o,n){if(1&n&&(o=e(o)),8&n)return o;if(4&n&&"object"==typeof o&&o&&o.__esModule)return o;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:o}),2&n&&"string"!=typeof o)for(var r in o)e.d(t,r,function(n){return o[n]}.bind(null,r));return t},e.n=function(o){var n=o&&o.__esModule?function(){return o.default}:function(){return o};return e.d(n,"a",n),n},e.o=function(o,n){return Object.prototype.hasOwnProperty.call(o,n)},e.p="",e(e.s=0)}({"../common/df.workgroup.GlobalVars.js":
/*!********************************************!*\
  !*** ../common/df.workgroup.GlobalVars.js ***!
  \********************************************/
/*! no static exports found */function(o,n){window.df=window.df||{},window.df.workgroup=window.df.workgroup||{},window.df.workgroup.GlobalVars={isLoaded:!1,infoData:null,time_now:0}},"../common/df.workgroup.Preset.js":
/*!****************************************!*\
  !*** ../common/df.workgroup.Preset.js ***!
  \****************************************/
/*! no static exports found */function(o,n){window.df=window.df||{},window.df.workgroup=window.df.workgroup||{},window.df.workgroup.Preset={json_url:{default:"/json/df_info_data.json.php",default_local:"assets_login/temp/df_info_data.json",login:"assets_login/temp/df_info_data_01_login.json",checkin:"assets_login/temp/df_info_data_02_checkin.json",checkout:"assets_login/temp/df_info_data_03_checkout.json",logout:"assets_login/temp/df_info_data_04_logout.json"},document_url:{approval:"approval/approval_to_list.php",approval_my:"approval/approval_my_list.php",approval_cc:"approval/approval_cc_list.php"},main_url:"main.php",eventType:{ON_LOAD_JSON:"onLoadJson",ON_LOGIN:"onLogin",ON_CHECKIN:"onCheckin",ON_CHECKOUT:"onCheckout",ON_LOGOUT:"onLogout",ON_CHANGE_STAGE_INFO:"onChangeStageInfo",ON_ERROR:"onError",ON_WARNING:"onWarning",ON_CLOSE_MODAL:"onCloseModal"},class_name:{showIn:"show-in",hideOut:"hide-out"},related_site:[{title:"designfever.com",url:"http://designfever.com/",thumb:"thumb_mail.jpg_200x200"},{title:"Facebook",url:"https://www.facebook.com/feverbook",thumb:"thumb_mail.jpg_200x200"},{title:"Twitter",url:"https://twitter.com/designfever_kr",thumb:"thumb_mail.jpg_200x200"},{title:"Blog",url:"https://blog.naver.com/design_fever",thumb:"thumb_mail.jpg_200x200"},{title:"DF Mail",url:"http://mail.designfever.com/",thumb:"thumb_mail.jpg_200x200"},{title:"DF Lab",url:"http://dev.designfever.com/lab/",thumb:"thumb_mail.jpg_200x200"},{title:"Youtube",url:"https://www.youtube.com/user/designfeverda",thumb:"thumb_mail.jpg_200x200"}],isBgTest:!1}},"../common/df.workgroup.Util.js":
/*!**************************************!*\
  !*** ../common/df.workgroup.Util.js ***!
  \**************************************/
/*! no static exports found */function(o,n){window.df=window.df||{},window.df.workgroup=window.df.workgroup||{},window.df.workgroup.Util=function(){var o;return{load_json:function(n,e,t,r){o=new Date,console.log("\n----- << START LOAD >> xhr.url : ",n,"\n");var i=r?JSON.stringify(r):null,a={method:e,action:n},d=new XMLHttpRequest;d.open(a.method,a.action,!0),d.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),d.onreadystatechange=function(){},d.onloadend=function(n){0===n.target.status?console.log("xhr.onloadend (Failed) : ",d):400===n.target.status?console.log("xhr.onloadend (Bad Request) : ",d):404===n.target.status?console.log("xhr.onloadend (404 Not Found) : ",d):200===n.target.status&&(console.log("\n----- << COMP LOAD >> ----- xhr.onloadend (Success) duration : ",((new Date).getTime()-o.getTime())/1e3+"sec\n\n"),console.log("xhr.onloadend (Success) response : \n",n),console.log("xhr.onloadend (Success) responseText(JSON) : \n",JSON.parse(n.target.responseText)),console.log("\n----- << COMP LOAD >> -----\n\n"),setTimeout(function(){t(n)},10))},d.send(i)},addZeroNumber:function(o){return o<10?"0"+o:""+o},addParamUniq:function(o){return o=-1==o.indexOf("?")?o+"?uniq="+(new Date).getTime():o+"&uniq="+(new Date).getTime()}}}()},"../common/df.workgroup.login.LoadInfoData.js":
/*!****************************************************!*\
  !*** ../common/df.workgroup.login.LoadInfoData.js ***!
  \****************************************************/
/*! no static exports found */function(o,n){!function(){if("function"==typeof window.CustomEvent)return!1;function o(o,n){n=n||{bubbles:!1,cancelable:!1,detail:void 0};var e=document.createEvent("CustomEvent");return e.initCustomEvent(o,n.bubbles,n.cancelable,n.detail),e}o.prototype=window.Event.prototype,window.CustomEvent=o}(),window.df=window.df||{},window.df.workgroup=window.df.workgroup||{},window.df.workgroup.login=window.df.workgroup.login||{},window.df.workgroup.login.LoadInfoData=function(){var o="[ LoadInfoData ]",n="";function e(o){var n=JSON.parse(o.target.responseText);window.df.workgroup.GlobalVars.isLoaded=!0,window.df.workgroup.GlobalVars.infoData=n;var e=!1,t=window.df.workgroup.GlobalVars.infoData;void 0!=t.user&&void 0!=t.user.isLoggedIn&&(t.user.isLoggedIn||"true"==t.user.isLoggedIn)&&(e=!0);var r=document.querySelector("html"),i=window.df.lab.Util.hasClass(r,"desktop");e&&(i&&"desktop"==Detectizr.device.type||t.user.isAdminAccount),function(){var o=new CustomEvent(window.df.workgroup.Preset.eventType.ON_LOAD_JSON);document.dispatchEvent(o)}()}function t(){document.removeEventListener(window.df.workgroup.Preset.eventType.ON_LOAD_JSON,t)}return{init:function(){n="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?window.df.workgroup.Preset.json_url.default_local:window.df.workgroup.Preset.json_url.default,console.log(o," load default json data"),document.addEventListener(window.df.workgroup.Preset.eventType.ON_LOAD_JSON,t),function(o,n){var e={method:"GET",action:df.workgroup.Util.addParamUniq(o)};df.workgroup.Util.load_json(e.action,e.method,n,null)}(n,e)}}}(),window.df.workgroup.login.LoadInfoData.init()},0:
/*!***************************************************************************************************************************************************************!*\
  !*** multi ../common/df.workgroup.Preset.js ../common/df.workgroup.GlobalVars.js ../common/df.workgroup.Util.js ../common/df.workgroup.login.LoadInfoData.js ***!
  \***************************************************************************************************************************************************************/
/*! no static exports found */function(o,n,e){e(/*! ../common/df.workgroup.Preset.js */"../common/df.workgroup.Preset.js"),e(/*! ../common/df.workgroup.GlobalVars.js */"../common/df.workgroup.GlobalVars.js"),e(/*! ../common/df.workgroup.Util.js */"../common/df.workgroup.Util.js"),o.exports=e(/*! ../common/df.workgroup.login.LoadInfoData.js */"../common/df.workgroup.login.LoadInfoData.js")}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,